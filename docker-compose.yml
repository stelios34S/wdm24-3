version: "3"
services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  gateway:
    image: nginx:1.25-bookworm
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build: ./order
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/order_redis.env
    depends_on:
      - rabbitmq
      - order-db
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6

  # order-db:
  #   image: redis:7.2-bookworm
  #   command: redis-server --requirepass redis --maxmemory 512mb
  
  # redis-2:
  #   image: redis:7.2-bookworm
  #   command: ["redis-server","/etc/redis/redis.conf"]
  #   volumes:
  #     - ./redis/7002/redis.conf:/etc/redis/redis.conf
  #   ports:
  #     - "7002:7002"
  
  # redis-5:
  #   image: redis:7.2-bookworm
  #   command: ["redis-server","/etc/redis/redis.conf"]
  #   volumes:
  #     - ./redis/7005/redis.conf:/etc/redis/redis.conf
  #   ports:
  #     - "7005:7005"


  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
    depends_on:
      - rabbitmq
      - stock-db

  stock-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  payment-service:
    build: ./payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
    depends_on:
      - rabbitmq
      - payment-db

  payment-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
  
  redis-cluster-creator:
    command:
      - redis-cli
      - --cluster
      - create
      - localhost:6379
      - localhost:7002
      - localhost:7003
      - localhost:7004
      - localhost:7005
      - localhost:7006
      - --cluster-yes
      - --cluster-replicas
      - '1'
    depends_on:
      order-db:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      redis-node-4:
        condition: service_healthy
      redis-node-5:
        condition: service_healthy
      redis-node-6:
        condition: service_healthy
    image: docker.io/redis:latest
    network_mode: host

  order-db:
    command:
      - redis-server
      - /redis/redis.conf
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '6379'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    volumes:
      - redis-data-1:/data
      - ./redis:/redis

  redis-node-2:
    command:
      - redis-server
      - /redis/redis.conf
      - --port
      - '7002'
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '7002'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    ports:
      - 7002:7000
    volumes:
      - redis-data-2:/data
      - ./redis:/redis

  redis-node-3:
    command:
      - redis-server
      - /redis/redis.conf
      - --port
      - '7003'
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '7003'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    ports:
      - 7003:7000
    volumes:
      - redis-data-3:/data
      - ./redis:/redis

  redis-node-4:
    command:
      - redis-server
      - /redis/redis.conf
      - --port
      - '7004'
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '7004'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    ports:
      - 7004:7000
    volumes:
      - redis-data-4:/data
      - ./redis:/redis

  redis-node-5:
    command:
      - redis-server
      - /redis/redis.conf
      - --port
      - '7005'
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '7005'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    ports:
      - 7005:7000
    volumes:
      - redis-data-5:/data
      - ./redis:/redis

  redis-node-6:
    command:
      - redis-server
      - /redis/redis.conf
      - --port
      - '7006'
    healthcheck:
      interval: 5s
      retries: '3'
      test:
        - CMD
        - redis-cli
        - -p
        - '7006'
        - -c
        - ping
      timeout: 2s
    image: docker.io/redis:latest
    network_mode: host
    ports:
      - 7006:7000
    volumes:
      - redis-data-6:/data
      - ./redis:/redis
volumes:
  redis-data-1: {}
  redis-data-2: {}
  redis-data-3: {}
  redis-data-4: {}
  redis-data-5: {}
  redis-data-6: {}